format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
    - BIN_NAME: workflow-editor
    - BIN_ARCH: x86_64
    - BIN_ARCH_ARM64: arm64
    - BIN_OS_DARWIN: Darwin
    - BIN_OS_LINUX: Linux
    - BIN_PATH_DARWIN: _bin/$BIN_NAME-$BIN_OS_DARWIN-$BIN_ARCH
    - BIN_PATH_DARWIN_ARM64: _bin/$BIN_NAME-$BIN_OS_DARWIN-$BIN_ARCH_ARM64
    - BIN_PATH_LINUX: _bin/$BIN_NAME-$BIN_OS_LINUX-$BIN_ARCH

    - PORT: "1234"
    - DEV_SERVER_PORT: "4567"
    - MODE: "CLI"

workflows:
  install-client-deps:
    title: Install the client dependencies
    envs:
      - NODE_ENV: "prod"
    steps:
      - script@1.1.5:
          title: asdf install nodejs
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex

                if ! [ -d ~/.asdf ]; then
                  git clone https://github.com/asdf-vm/asdf.git ~/.asdf
                  source ~/.asdf/asdf.sh
                fi

                envman add --key PATH --value $PATH

                asdf plugin add nodejs ||:
                asdf install nodejs
      - script:
          title: bundle install & npm ci
          deps:
            apt_get:
              - name: ruby
              - name: ruby-dev
              - name: build-essential
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                gem install -f bundler:2.5.6
                bundle install
                npm ci
  build-client:
    title: Build the client
    envs:
      - NODE_ENV: "prod"
    steps:
      - script:
          title: npm run build
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                npm run build
  install-api-server-deps:
    title: Install the API server dependencies
    steps:
      - script:
          title: asdf install golang
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex

                if ! [ -d ~/.asdf ]; then
                  git clone https://github.com/asdf-vm/asdf.git ~/.asdf
                  source ~/.asdf/asdf.sh
                fi

                envman add --key PATH --value $PATH

                asdf plugin add golang ||:
                asdf install golang
      - script:
          title: go install
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                go install golang.org/x/lint/golint@latest
                go install github.com/kisielk/errcheck@v1.7.0
                go install github.com/GeertJohan/go.rice/rice@latest
                asdf reshim golang
  build-api-server:
    title: Build the Go API server binaries
    description: |
      Creates Linux and Darwin binaries with embedded assets
    steps:
      - script:
          title: Compile Api server
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                ./_scripts/compile_api.sh

  setup:
    before_run:
      - install-client-deps
      - install-api-server-deps
      - build-client
      - build-api-server

  ci:
    title: Run the CI checks
    envs:
      - NODE_ENV: "prod"
    steps:
      - bitrise-run@0:
          title: Run API server tests
          inputs:
            - workflow_id: test-api
      - bitrise-run@0:
          title: Run client unit & E2E tests
          inputs:
            - workflow_id: test-client
  test-api:
    title: Run the API server tests
    before_run:
      - install-api-server-deps
    steps:
      - script:
          title: Go Lint & Vet & Check for unhandled errors
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                go vet ./...
                golint ./...
                errcheck -asserts=true -blank=true ./...
      - script:
          title: Go Test
          inputs:
            - content: |-
                #!/bin/bash
                set -ex

                go test ./...

  test-client:
    title: Run the client unit & E2E tests
    envs:
      - NODE_ENV: "prod"
    before_run:
      - install-client-deps
      - build-client
      - build-api-server
    steps:
      - script:
          title: Run linter
          inputs:
            - content: |-
                npm run lint
      - script:
          title: Run unit tests
          inputs:
            - content: |-
                npm run test
      - script:
          title: Run E2E tests
          deps:
            apt_get:
              - name: libasound2
              - name: libgbm-dev
              - name: libgconf-2-4
              - name: libgtk-3-0
              - name: libgtk2.0-0
              - name: libnss3
              - name: libxss1
              - name: libxtst6
              - name: xauth
              - name: xvfb
              - name: xdg-utils
          inputs:
            - content: |-
                npm run e2e:ci

