.tab-env-vars.menu-content-padding[ng-controller="EnvVarsController as envVarsCtrl" ng-init="envVarsCtrl.configureWithMode('env-vars')"]
	section.cardo.warn-box
		.icon
		.message
			.title == "You should <strong>not</strong> add private information here."
			p
				| These Environment Variables will also be available in builds triggered by pull requests and bitrise.yml. For private info use 
				button[ng-click="mainCtrl.selectMenuByID('secrets')"] == "Secrets"
				| .
	section.cardo[ng-repeat="envVarsOfSource in envVarsCtrl.envVarsBySource"]
		header
			h2[ng-switch="envVarsOfSource.type"]
				span[ng-switch-when="app"] == "Project Environment Variables"
				span[ng-switch-when="workflow"]
					span>[ng-bind="envVarsOfSource.workflowID"]
					em == "Workflow Environment Variables"
				p[ng-if="envVarsOfSource.notification" ng-bind="envVarsOfSource.notification"]
		article
			ul.env-vars[order-by-drag models="envVarsOfSource.envVars"]
				li[ng-repeat="envVar in envVarsOfSource.envVars"]
					p.progress-indicator[progress-model="envVar.customProperties.progress"]
					form[name="envVarForm" ng-if="!envVar.customProperties.progress.isInProgress" method="POST"]
						.key-value-delete
							input.key[type="text" name="key" autocomplete="off" ng-model="envVar.key" ng-model-options="{getterSetter: true}" ng-disabled="!envVar.isKeyChangeable" custom-validators="{'key': Variable.isValidKey(envVar.key())}" placeholder="Key" skip-drag-order]
							.value-with-actions
								textarea.value[name="value" msd-elastic ng-model="envVar.value" ng-model-options="{getterSetter: true}" ng-trim="false" placeholder="Value" skip-drag-order]
							.actions[floating-menu toggle="envVar.customProperties.isMenuVisible"]
								button.dropdown-toggle[ng-click="envVar.customProperties.isMenuVisible = !envVar.customProperties.isMenuVisible"] &vellip;
								.dropdown[ng-if="envVar.customProperties.isMenuVisible"]
									button.dropdown-option.delete-env-var[ng-click="envVarsCtrl.removeEnvVarFromEnvVars(envVar, envVarsOfSource.envVars)"] == "Delete"
						.env-var-settings
							.is-expand
								checkbox.small[name="isExpand" ng-model="envVar.isExpand" ng-model-options="{getterSetter: true}" checkbox-id-expression="'env-var-editor-is-expand-checkbox-' + $index"]
								label[for="env-var-editor-is-expand-checkbox-{{ $index }}"] == "Replace variables in inputs?"
						.actions.small
							button.option.delete-env-var.rebo.danger[ng-click="envVarsCtrl.removeEnvVarFromEnvVars(envVar, envVarsOfSource.envVars)"] == "Delete"
						p.notification.warning[ng-if="envVarForm.key.$invalid && !envVarForm.key.$pristine" ng-bind="envVarsCtrl.envVarValidationWarning(envVar)"]
			button.add.rebo.purple[ng-click="envVarsCtrl.addToEnvVars(envVarsOfSource.envVars)"] == "Add new"
