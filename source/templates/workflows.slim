.workflows-page[ng-if="mainCtrl.enableNewWorkflowsPage" ng-controller="WorkflowsController as workflowsCtrl" ng-init="workflowsCtrl.init()"]
  r-workflows-page[
    yml="workflowsCtrl.yml"
    on-change="workflowsCtrl.onChangeYml"
  ]

.tab-workflows[ng-if='!mainCtrl.enableNewWorkflowsPage' ng-controller="WorkflowsController as workflowsCtrl" ng-init="workflowsCtrl.init()"]
  p.progress-indicator[progress-model="workflowsCtrl.loadWorkflowsProgress"]
  .content[ng-if="workflowsCtrl.loadWorkflowsProgress.isIdle"]
    div[ng-if="workflowsCtrl.selectedWorkflowChain.length === 0" ng-style="{ padding: '32px'}"]
      r-workflow-empty-state[
        on-add-workflow="workflowsCtrl.openReactCreateWorkflowDialog"
      ]
    .workflows[ng-init="workflowsCtrl.getAvailableHeightForWorkflows()" ng-if="workflowsCtrl.selectedWorkflowChain.length > 0"]
      .workflows-container[ng-show="workflowsCtrl.shouldShowWorkflowsContent" ng-style="{'max-height': workflowsCtrl.workflowsHeight + 'px', 'min-height': workflowsCtrl.workflowsHeight + 'px'}"]
        .steps-container
          r-workflow-toolbar.react-toolbar[
            default-branch="workflowsCtrl.defaultBranch"
            can-run-workflow="workflowsCtrl.canRunWorkflow"
            is-run-workflow-disabled="mainCtrl.hasUnsavedChanges()"
            selected-workflow="workflowsCtrl.selectedWorkflow"
            workflows="workflowsCtrl.workflows"
            select-workflow="workflowsCtrl.selectWorkflowWithDigest"
            rename-workflow-confirmed="workflowsCtrl.confirmRenameWorkflowWithDigest"
            on-add-new-workflow="workflowsCtrl.openReactCreateWorkflowDialog"
            on-open-chain-workflow-dialog="workflowsCtrl.openReactChainWorkflowDrawer"
            on-rearrange-workflow="workflowsCtrl.openRearrangeWorkflowsPopupWithDigest"
            on-delete-selected-workflow="workflowsCtrl.openReactDeleteWorkflowDialog"
            on-run-workflow="workflowsCtrl.runWorkflowWithDigest"
            unique-step-count="workflowsCtrl.uniqueStepCount"
            unique-step-limit="workflowsCtrl.uniqueStepLimit"
            organization-slug="appService.appDetails.ownerData.slug"
          ]
          section.workflow[ng-repeat="workflowChainLink in workflowsCtrl.selectedWorkflowChain" workflow-index-setter="{{ workflowIndex = $index }}" ng-init="workflow = workflowChainLink.workflow" ng-class="{'edited': workflowIndex == workflowsCtrl.editedWorkflowIndex, 'selected': workflow == workflowsCtrl.selectedWorkflow}" ng-attr-scroll-target="{{ workflowIndex == workflowsCtrl.editedWorkflowIndex ? '' : undefined }}" scroll-padding="30" id="steps-container"]
            header.workflow-header.with-flow-decoration
              .header-info
                h2
                  button.edit[ng-click="workflowsCtrl.editWorkflowAtIndex(workflowIndex); workflowsCtrl.deselectStep()"]
                  span.icons-and-name
                    span.icon[ng-if="workflowChainLink.isBeforeRunWorkflow"] == svg("workflow/icon-before_run")
                    span.icon[ng-if="workflowChainLink.isAfterRunWorkflow"] == svg("workflow/icon-after_run")
                    span.workflow-name[ng-bind="workflow.id"]
                    span.edit-icon == svg("code")
                  button.remove[ng-if="workflowChainLink.selectedWorkflowBeforeRunWorkflowIndex != -1 || workflowChainLink.selectedWorkflowAfterRunWorkflowIndex != -1" ng-click="workflowsCtrl.deleteBeforeAfterWorkflowAtWorkflowChainLink(workflowChainLink)"] == svg("cross")
            article
              ul.steps
                ul[order-by-drag models="workflow.steps"]
                  li[ng-repeat="step in workflow.steps" step-index-setter="{{ stepIndex = $index }}" ng-class="{'selected': step == workflowsCtrl.selectedStep && workflowIndex == workflowsCtrl.editedWorkflowIndex}" ng-mousedown="workflowsCtrl.stepOrderWorkflow = workflow"]
                    button.add-step[ng-click="workflowsCtrl.addStepSelectedAtIndex(stepIndex, workflowIndex)" ng-disabled="workflowIndex != workflowsCtrl.editedWorkflowIndex" skip-drag-order]
                    .step-actions
                      r-step-item[
                        workflow-index="workflowIndex"
                        step="step"
                        display-name="step.displayName()"
                        version="step.requestedVersion()"
                        has-version-update="workflowsCtrl.checkStepVersionUpdate(step)"
                        is-selected="step == workflowsCtrl.selectedStep && workflowIndex == workflowsCtrl.editedWorkflowIndex"
                        on-selected="workflowsCtrl.stepSelected"]
                      button.update-step[ng-if="workflowsCtrl.checkStepVersionUpdate(step)" ng-click="workflowsCtrl.changeStepToVersion(step, null)"]
                li
                  button.add-step[ng-click="workflowsCtrl.addStepSelectedAtIndex(workflow.steps.length, workflowIndex)" ng-disabled="workflowIndex != workflowsCtrl.editedWorkflowIndex && workflow.steps.length > 0"]
        .step-edit-container
          .ins-var[ng-if="workflowsCtrl.selectedStep" ng-controller="InsertVariableController as insertVariableCtrl"]
            .ins-sec[ng-if="workflowsCtrl.selectedStep" ng-controller="InsertVariableController as insertSecretCtrl"]
              div[ng-if="!workflowsCtrl.selectedStep.isStepBundle() && !workflowsCtrl.selectedStep.isWithBlock()"]
                r-step-config[
                  tab-id="workflowsCtrl.tabId"
                  step="workflowsCtrl.selectedStep"
                  secrets="insertSecretCtrl.insertableVariablesForReact"
                  environment-variables="insertVariableCtrl.insertableVariablesForReact"
                  resolved-version="workflowsCtrl.selectedStepResolvedVersion"
                  has-version-update="workflowsCtrl.checkStepVersionUpdate(workflowsCtrl.selectedStep)"
                  versions-with-remarks="workflowsCtrl.selectedStepVersionsWithRemarks"
                  input-categories="workflowsCtrl.inputCategoriesOfSelectedStep"
                  output-variables="workflowsCtrl.outputVariables"
                  on-change-tab-id="workflowsCtrl.setTabId"
                  on-clone="workflowsCtrl.cloneSelectedStep"
                  on-remove="workflowsCtrl.deleteSelectedStep"
                  on-change="workflowsCtrl.handleSelectedStepChanges"
                  on-create-secret="workflowsCtrl.saveSecretFromReact"
                  on-load-secrets="insertSecretCtrl.initForReact(requestService.mode == 'website' ? ['from_code_signing_files', 'from_secrets'] : ['from_secrets'], workflowsCtrl.workflows, workflowsCtrl.selectedWorkflow, workflowsCtrl.selectedStep)"
                  on-create-env-var="workflowsCtrl.saveEnvVarFromReact"
                  on-load-env-vars="insertVariableCtrl.initForReact(null, workflowsCtrl.workflows, workflowsCtrl.selectedWorkflow, workflowsCtrl.selectedStep)"
                  secrets-write-new="mainCtrl.appSecretsWriteNew"
                  app-slug="appService.appDetails.slug"
                ]
              div[ng-if="workflowsCtrl.selectedStep.isStepBundle()"]
                r-step-bundle-panel[step-display-name="workflowsCtrl.selectedStep.displayName()"]
              div[ng-if="workflowsCtrl.selectedStep.isWithBlock()"]
                r-with-block-panel[step-display-name="workflowsCtrl.selectedStep.displayName()" with-block-data="workflowsCtrl.selectedStep.withBlockData"]
          section.workflow[ng-if='!workflowsCtrl.selectedStep && (workflowsCtrl.editedWorkflow && workflowsCtrl.yml)']
            r-workflow-config-panel[
              yml="workflowsCtrl.yml"
              default-values="workflowsCtrl.editedWorkflowConfigForReact"
              on-change="workflowsCtrl.editedWorkflowConfigForReactChanged"
            ]
  popup[model="workflowsCtrl.rearrangeWorkflowsPopup"]
    .popup-body.snowflake#rearrange-workflow-chain-popup-body
      header == data[:strings][:workflows][:rearrange][:drag_n_drop]
      article.vertical-scroll
        ul.workflow-chain[order-by-drag models="workflowsCtrl.rearrangeWorkflowsChainHierarchy"]
          ul.workflow-subchain[ng-repeat="workflowSubChain in workflowsCtrl.rearrangeWorkflowsChainHierarchy" ng-class="workflowSubChain.cssClass"]
            li[ng-repeat="workflow in workflowSubChain.workflowChain track by $index + '_' + workflow.id" ng-bind="workflow.id"]
      footer
        button.done[ng-click="workflowsCtrl.rearrangeWorkflowsFinished()"] == data[:strings][:workflows][:rearrange][:done]
        button.cancel[ng-click="workflowsCtrl.rearrangeWorkflowsPopup.isVisible = false"] == data[:strings][:workflows][:rearrange][:cancel]
  r-step-selector-drawer[
    is-open="workflowsCtrl.showReactStepDrawer"
    on-close="workflowsCtrl.closeReactStepDrawer"
    enabled-steps="appService.allowedStepIds"
    on-select-step="workflowsCtrl.handleInsertStepAtIndexFromReact"
  ]
  r-chain-workflow-drawer[
    workflow-id="workflowsCtrl.selectedWorkflow.id"
    yml="workflowsCtrl.yml"
    is-open="workflowsCtrl.showReactChainWorkflowDrawer"
    on-close="workflowsCtrl.closeReactChainWorkflowDrawer"
    on-chain-workflow="workflowsCtrl.chainWorkflow"
  ]
  r-version-change-dialog[
    is-open="workflowsCtrl.selectedStepVersionChangeDialogProps"
    on-close="workflowsCtrl.closeReactVersionChangeDialog"
    is-major-change="workflowsCtrl.selectedStepVersionChangeDialogProps.isMajorChange"
    removed-inputs="workflowsCtrl.selectedStepVersionChangeDialogProps.removedInputs"
    new-inputs="workflowsCtrl.selectedStepVersionChangeDialogProps.newInputs"
    release-notes-url="workflowsCtrl.selectedStepVersionChangeDialogProps.releaseNotesUrl"
  ]
  r-delete-workflow-dialog[
    workflow-id="workflowsCtrl.selectedWorkflow.id"
    is-open="workflowsCtrl.showReactDeleteWorkflowDialog"
    on-close="workflowsCtrl.closeReactDeleteWorkflowDialog"
    on-delete-workflow="workflowsCtrl.deleteReactWorkflow"
  ]
  r-create-workflow-dialog[
    yml="workflowsCtrl.yml"
    is-open="workflowsCtrl.showReactCreateWorkflowDialog"
    on-close="workflowsCtrl.closeReactCreateWorkflowDialog"
    on-create-workflow="workflowsCtrl.createReactWorkflow"
  ]
