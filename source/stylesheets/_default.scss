/* Functions */

@function contains($list, $element) {
	@return not not index($list, $element);
}

@function string_replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace +
			string_replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

@function svg_with_content($content, $width, $height) {
	@return svg_content_with_attributes(
		"<svg>#{ $content }</svg>",
		(
			xmlns: "http://www.w3.org/2000/svg",
			width: $width,
			height: $height,
			viewBox: "0 0 #{ $width } #{ $height }"
		)
	);
}

@function svg_content_with_attributes($svg_content, $attributes) {
	$attributes_string: "";

	@each $key, $value in $attributes {
		$attributes_string: '#{ $attributes_string } #{ $key }="#{ $value }"';
	}

	@return string_replace($svg_content, "<svg", "<svg" + $attributes_string);
}

@function background_image_from_svg_content($svg_content) {
	@return url("data:image/svg+xml;utf8, #{ $svg_content }");
}

@function background_image_from_svg_content_with_attributes($svg_content, $attributes) {
	@return background_image_from_svg_content(svg_content_with_attributes($svg_content, $attributes));
}

/* Screen sizes */

$screen-huge: 1280px;
$screen-big: 992px;
$screen-mid: 768px;
$screen-small: 480px;
$screen-tiny: 360px;
$screen-minimum: 320px;

/* Media Queries */

@mixin media-above($value) {
	@media only screen and (min-width: $value + 1) {
		@content;
	}
}

@mixin media-below($value) {
	@media only screen and (max-width: $value - 1) {
		@content;
	}
}

@mixin media-above-inclusive($value) {
	@media only screen and (min-width: $value) {
		@content;
	}
}

@mixin media-below-inclusive($value) {
	@media only screen and (max-width: $value) {
		@content;
	}
}

@mixin media-above-height($value) {
	@media only screen and (min-height: $value + 1) {
		@content;
	}
}

@mixin media-below-height($value) {
	@media only screen and (max-height: $value + 1) {
		@content;
	}
}

@mixin media-above-height-inclusive($value) {
	@media only screen and (min-height: $value) {
		@content;
	}
}

@mixin media-below-height-inclusive($value) {
	@media only screen and (max-height: $value) {
		@content;
	}
}

@mixin media-above-huge {
	@include media-above($screen-huge) {
		@content;
	}
}

@mixin media-above-big {
	@include media-above($screen-big) {
		@content;
	}
}

@mixin media-above-mid {
	@include media-above($screen-mid) {
		@content;
	}
}

@mixin media-above-small {
	@include media-above($screen-small) {
		@content;
	}
}

@mixin media-above-tiny {
	@include media-above($screen-tiny) {
		@content;
	}
}

@mixin media-below-huge {
	@include media-below($screen-huge) {
		@content;
	}
}

@mixin media-below-big {
	@include media-below($screen-big) {
		@content;
	}
}

@mixin media-below-mid {
	@include media-below($screen-mid) {
		@content;
	}
}

@mixin media-below-small {
	@include media-below($screen-small) {
		@content;
	}
}

@mixin media-below-tiny {
	@include media-below($screen-tiny) {
		@content;
	}
}

@mixin media-above-inclusive-huge {
	@include media-above-inclusive($screen-huge) {
		@content;
	}
}

@mixin media-above-inclusive-big {
	@include media-above-inclusive($screen-big) {
		@content;
	}
}

@mixin media-above-inclusive-mid {
	@include media-above-inclusive($screen-mid) {
		@content;
	}
}

@mixin media-above-inclusive-small {
	@include media-above-inclusive($screen-small) {
		@content;
	}
}

@mixin media-above-inclusive-tiny {
	@include media-above-inclusive($screen-tiny) {
		@content;
	}
}

@mixin media-below-inclusive-huge {
	@include media-below-inclusive($screen-huge) {
		@content;
	}
}

@mixin media-below-inclusive-big {
	@include media-below-inclusive($screen-big) {
		@content;
	}
}

@mixin media-below-inclusive-mid {
	@include media-below-inclusive($screen-mid) {
		@content;
	}
}

@mixin media-below-inclusive-small {
	@include media-below-inclusive($screen-small) {
		@content;
	}
}

@mixin media-below-inclusive-tiny {
	@include media-below-inclusive($screen-tiny) {
		@content;
	}
}

/* Attributes */

@mixin display-flex {
	display: flex;
}

@mixin display-inline-flex {
	display: inline-flex;
}

@mixin flex($value) {
	flex: $value;
}

@mixin flex-direction($value) {
	flex-direction: $value;
}

@mixin flex-grow($value) {
	flex-grow: $value;
}

@mixin flex-shrink($value) {
	flex-shrink: $value;
}

@mixin justify-content($value) {
	justify-content: $value;
}

@mixin align-items($value) {
	align-items: $value;
}

@mixin align-self($value) {
	align-self: $value;
}

@mixin flex-wrap($value) {
	flex-wrap: $value;
}

@mixin flex-basis($value) {
	flex-basis: $value;
}

@mixin order($value) {
	order: $value;
}

@mixin position($position: null, $top: null, $right: null, $bottom: null, $left: null) {
	@if ($position) {
		position: $position;
	}

	@if ($top) {
		top: $top;
	}

	@if ($right) {
		right: $right;
	}

	@if ($bottom) {
		bottom: $bottom;
	}

	@if ($left) {
		left: $left;
	}
}

@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}

@mixin min-size($width, $height: $width) {
	min-width: $width;
	min-height: $height;
}

@mixin max-size($width, $height: $width) {
	max-width: $width;
	max-height: $height;
}

@mixin box-sizing($value) {
	box-sizing: $value;
}

@mixin margin-x($value) {
	margin-left: $value;
	margin-right: $value;
}

@mixin margin-y($value) {
	margin-top: $value;
	margin-bottom: $value;
}

@mixin border-x($value) {
	border-left: $value;
	border-right: $value;
}

@mixin border-y($value) {
	border-top: $value;
	border-bottom: $value;
}

@mixin border-radius($value) {
	border-radius: $value;
}

@mixin border-top-radius($value) {
	border-top-left-radius: $value;
	border-top-right-radius: $value;
}

@mixin border-left-radius($value) {
	border-top-left-radius: $value;
	border-bottom-left-radius: $value;
}

@mixin border-bottom-radius($value) {
	border-bottom-left-radius: $value;
	border-bottom-right-radius: $value;
}

@mixin border-right-radius($value) {
	border-top-right-radius: $value;
	border-bottom-right-radius: $value;
}

@mixin border-top-left-radius($value) {
	border-top-left-radius: $value;
}

@mixin border-top-right-radius($value) {
	border-top-right-radius: $value;
}

@mixin border-bottom-left-radius($value) {
	border-bottom-left-radius: $value;
}

@mixin border-bottom-right-radius($value) {
	border-bottom-right-radius: $value;
}

@mixin padding-x($value) {
	padding-left: $value;
	padding-right: $value;
}

@mixin padding-y($value) {
	padding-top: $value;
	padding-bottom: $value;
}

@mixin box-shadow($value) {
	box-shadow: $value;
}

@mixin appearance($value) {
	appearance: $value;
}

@mixin ellipsis-oneliner {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

@mixin wordbreak-oneliner {
	overflow: hidden;
	white-space: normal;
	word-break: break-word;
}

@mixin column-count($value) {
	column-count: $value;
}

@mixin column-gap($value) {
	column-gap: $value;
}

@mixin column-rule($value) {
	column-rule: $value;
}

@mixin column-break-inside($value) {
	page-break-inside: $value;
	break-inside: $value;
}

@mixin transform($values...) {
	transform: $values;
}

@mixin transform-origin($value) {
	transform-origin: $value;
}

@mixin transition($values...) {
	transition: $values;
}

@mixin transition-property($values...) {
	transition-property: $values;
}

@mixin transition-duration($value) {
	transition-duration: $value;
}

@mixin transition-delay($value) {
	transition-delay: $value;
}

@mixin animation($value) {
	animation: $value;
}

@mixin animation-duration($value) {
	animation-duration: $value;
}

@mixin keyframes($animation_name) {
	@keyframes #{$animation_name} {
		@content;
	}
}

@mixin user-select($value) {
	user-select: $value;
}

/* Others */

@mixin readonly {
	&:read-only {
		@content;
	}

	&:-moz-read-only {
		@content;
	}
}

@mixin svg-icon($color, $hover-color: null) {
	@include transition(fill $def-transition_duration);

	fill: $color;

	@if $hover-color {
		&:hover {
			fill: $hover-color;
		}
	}
}
