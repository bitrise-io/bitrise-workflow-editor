@import "default";
@import "constants";

.tab-env-vars {

	section {
		margin-bottom: 20px;

		&.warn-box {
			@include display-flex;
			@include justify-content(space-between);
			padding: 12px 18px;

			.icon {
				margin-right: 15px;

				&:before {
					content: "";
					display: inline-block;
					vertical-align: sub;
					background-repeat: no-repeat;
					background-position: center bottom;
				}
			}

			.message {
				@include display-flex;
				@include flex-direction(column);
				@include justify-content(center);
				@include flex-grow(1);

				.title {
					color: $def-verydarkgrey;
					font-size: 20px;
					font-weight: 400;
					font-style: normal;
					font-stretch: normal;
					line-height: 1;
					letter-spacing: 0.3px;
				}
			}
		}

		p.notification.source-specific-notification {
			@include margin-y(0);
			@include border-x(none);
			@include border-radius(0);
			padding: $cardo-verticalpadding $cardo-horizontalpadding;
		}

		article {
			$border: 1px solid $def-mediumlightgrey;
			$first_column-width: 330px;
			$input-height: 36px;
			$action_dropdown_icon-spacing: 15px;
			$action_dropdown_icon-width: 26px;

			padding: 0;
			background-color: white;

			ul.env-vars {
				@include margin-y(0);
				padding-left: 0;
				list-style: none;

				li {
					border-bottom: $border;
					padding: $cardo-verticalpadding $cardo-horizontalpadding;
					background-color: white;
					cursor: move;

					.key-value-delete {
						$input-horizontalpadding: 14px;

						@include display-flex;
						@include align-items(center);
						margin-bottom: 12px;

						&:before {
							content: "=";
							@include order(2);
							@include margin-x(20px);
							width: 10px;
							font-size: 19px;
							font-weight: 700;
						}

						input.key, textarea.value {
							padding: 0px $input-horizontalpadding;
							height: $input-height;
							font-size: 14px;
							font-weight: 400;
							@include SourceCodeProWithFallback;
						}

						input.key {
							$background_width: 8px;
							$background_reservedwidth: 30px;

							@mixin input_key_styling($is_danger) {
								$color: if($is_danger, $def-danger, $def-purple);

								border: 1px solid $color;
								color: $color;
								background-image: background_image_from_svg_content('<%= svg("env_var_prefix") %>'), background_image_from_svg_content('<svg xmlns="http://www.w3.org/2000/svg"><rect width="#{ $background_reservedwidth }" height="#{ $input-height }" fill="#{ rgba($color, 0.99) }"></rect></svg>');
							}

							@include order(1);
							@include flex-shrink(0);
							@include box-sizing(border-box);
							width: $first_column-width;
							@include border-radius($def-radius);
							padding-left: $background_reservedwidth + $input-horizontalpadding;
							background-size: $background_width auto, $background_reservedwidth 100%;
							background-position: left #{($background_reservedwidth - $background_width) / 2} center, left center;
							background-repeat: no-repeat;
							@include input_key_styling(false);

							&.ng-invalid:not(.ng-pristine) {
								@include input_key_styling(true);
							}

							&:disabled {
								background-color: $def-verylightgrey;
    						color: $def-darkgrey;
							}
						}

						.value-with-actions {
							@include order(3);
							@include flex-grow(1);
							@include align-self(flex-start);
							border: 1px solid $def-mediumlightgrey;
							@include border-radius($def-radius);
							position: relative;
							overflow: hidden;

							textarea.value {
								@include align-self(stretch);
								@include box-sizing(border-box);
								border: 0;
								@include padding-y(8px);
								display: block;
								width: 100%;


								&:disabled {
									background-color: $def-verylightgrey;
    							color: $def-darkgrey;
								}
							}

							&.secret {

								textarea.value {
									padding-right: 68px;

									&.protected {
										padding-right: 14px;
										color: $def-mediumdarkgrey;
										background-color: $def-lightgrey;
									}
								}
							}

							.lock {
								@include position(absolute, 0, 0);
								@include size(54px, 100%);

								svg {
									@include size(16px, 18px);
									margin: 9px 19px;
									fill: $def-mediumdarkgrey;
								}
							}

							.eye-checkbox {
								@include position(absolute, 0, 0);
								@include size(54px, 100%);
								@include border-radius(0);
								background-color: $def-mediumlightgrey;
							}

							.should-show-value {
								display: none;
							}
						}

						.actions:not(.small) {
							@include order(4);
							@include flex-shrink(0);
							position: relative;
							margin-left: $action_dropdown_icon-spacing;



							.dropdown-toggle {
								cursor: pointer;

								svg {
									@include size($action_dropdown_icon-width, 12px);
									fill: $def-grey;
								}

								&:focus svg, &:hover svg {
									fill: $def-darkgrey;
								}
							}

							.dropdown {
								@include position(absolute, 100%, 0);
								z-index: $zindex-popover;
								width: 180px;
								margin-top: 10px;
								border: 1px solid $def-lightgrey;
								@include border-radius(5px);
								@include box-shadow(0px 0px 10px 0px rgba(0, 0, 0, 0.2));
								overflow: hidden;

								.dropdown-option {
									display: block;
									padding: 15px 12px;
									font-size: 13px;
									font-weight: 400;
									color: $def-mediumdarkgrey;
									background-color: white;

									&:hover {
										background-color: $def-ultralightgrey;
									}

									&:not(:last-child) {
										border-bottom: 1px solid $def-lightgrey;
									}

									&.delete-env-var {
										color: $def-danger;
									}
								}

								a.dropdown-option {
									text-decoration: none;
								}

								button.dropdown-option {
									width: 100%;
									text-align: left;
								}
							}
						}
					}

					.env-var-settings {
						@include display-flex;
						@include align-items(center);

						&:not(:last-child) {
							margin-bottom: 12px;
						}

						.is-expand, .is-expose-with-popover {
							@include display-flex;
							@include align-items(center);

							.checkbox + label {
								margin-left: 8px;
							}

							label {
								font-size: 13px;
								font-weight: 400;
							}
						}

						.is-expand {
							@include flex-shrink(0);
							@include box-sizing(border-box);
							width: $first_column-width + 50px;
						}
					}

					.actions.small {
						display: none;
					}

					p.notification {
						@include margin-y(0);
					}
				}

				li.dragged-element {
					z-index: $zindex-dragged_element;
					border-top: $border;
				}
			}

			ul.env-vars.drag-in-progress {

				* {
					@include user-select(none);
				}
			}

			button.add {
				width: $first_column-width;
				margin: $cardo-verticalpadding $cardo-horizontalpadding;
			}

			@include media-below-mid {
				@include display-flex;
				@include flex-direction(column);

				ul.env-vars {

					li {

						.key-value-delete {
							@include flex-direction(column);
							margin-bottom: 0;

							input.key {
								@include align-self(stretch);
							}

							&:before {
								@include margin-y(10px);
								margin-left: $first_column-width / 2;
								margin-right: auto;
							}

							.value-with-actions {
								width: $first_column-width;
								border: 0;

								textarea.value {
									padding-right: 14px;
									border: 1px solid $def-mediumlightgrey;
									@include border-radius($def-radius);
								}

								.eye-checkbox {
									display: none;
								}

								.should-show-value {
									@include display-flex;
									@include align-items(center);
									@include align-self(flex-start);
									@include order(4);
									@include padding-y(16px);
									margin-top: 12px;

									.checkbox + label {
										margin-left: 8px;
									}

									label {
										font-size: 13px;
										font-weight: 400;
									}
								}
							}

							.actions:not(.small) {
								display: none;
							}
						}

						.env-var-settings {
							@include flex_direction(column);
							@include align_items(flex-start);

							.is-expand, .is-expose-with-popover {
								@include padding-y(16px);
							}

							.is-expose-with-popover .is-expose .popover {
								top: 95%;
							}
						}

						.actions.small {
							@include display-flex;
							@include flex_direction(column);
							@include align_items(flex-start);
							@include flex-shrink(0);

							button.delete-env-var, button.make-it-protected {
								@include align-self(stretch);
								@include size($first_column-width, auto);
								margin-top: 12px;
								@include margin-x(0);

								&:after {
									content: "<%= data[:strings][:env_vars][:delete_env_var] %>";
								}
							}

							button.make-it-protected {
								border-color: $def-mediumdarkgrey;
								color: $def-mediumdarkgrey;
								background-color: white;
							}
						}
					}
				}
			}

			@include media-below-small {

				ul.env-vars {

					li {

						.key-value-delete {

							input.key {
								width: auto;
							}

							.value-with-actions {
								width: 100%;
							}

							&:before {
								@include margin-x(0);
							}
						}

						.actions.small {

							button.delete-env-var, button.make-it-protected {
								width: auto;
							}
						}
					}
				}

				button.add {
					@include flex-grow(1);
					width: auto;
				}
			}
		}
	}
}

.tab-env-vars section.warn-box {
	border: solid 1px #ffc500cc;
	background-color: #ffc50066;

	.icon:before {
		width: 67px;
		height: 62px;
		background-size: 67px 62px;
		background-repeat: no-repeat;
		background-image: url("/images/warning-cat.png");
	}

	.message p {
		color: $def-verydarkgrey;
		font-size: 13px;
		font-weight: normal;
		font-style: normal;
		font-stretch: normal;
		line-height: 1.38;
		letter-spacing: normal;
		margin-bottom: 0;

		button {
			text-decoration: underline;
		}
	}

	@include media-below-tiny {
		@include flex-direction(column);

		.icon {
			@include align-self(center);
			margin-right: 15px;
			margin-bottom: 15px;
		}
	}
}
