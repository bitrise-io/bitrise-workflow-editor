---
format_version: '13'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: other
stages:
  build:
    workflows:
    - build_ios: {}
    - build_android: {}
    - static_analyses: {}
  test:
    workflows:
    - test_ios: {}
    - test_android: {}
pipelines:
  run_if_test:
    workflows:
      build_ios:
        run_if:
          expression: "{{ false }}"
      test_ios:
        depends_on:
        - build_ios
  graph_pipeline:
    workflows:
      build_ios: {}
      test_ios:
        depends_on:
        - build_ios
      build_android: {}
      test_android:
        depends_on:
        - build_android
      static_analyses:
        abort_on_fail: true
  graps-with-two-trains:
    workflows:
      A: {}
      B:
        depends_on:
        - A
      C:
        depends_on:
        - B
      D: {}
      E:
        depends_on:
        - D
        abort_on_fail: true
      F:
        depends_on:
        - E
  mostly-skipped-graph:
    workflows:
      A:
        run_if: "{{ false }}"
      B:
        run_if: "{{ false }}"
        depends_on:
        - A
      C:
        run_if: "{{ false }}"
        depends_on:
        - A
      D:
        depends_on:
        - B
        - C
  with-stages:
    stages:
    - build: {}
    - test: {}
  dag-fan-out-fan-in:
    workflows:
      Pipeline-generator: {}
      A:
        run_if: "{{ false }}"
        depends_on:
        - Pipeline-generator
      B:
        depends_on:
        - A
        - Pipeline-generator
      C:
        depends_on:
        - A
      D:
        depends_on:
        - B
        - C
      E:
        depends_on:
        - D
      F:
        depends_on:
        - D
        - I
      G:
        depends_on:
        - E
        - F
      H:
        depends_on:
        - A
      I:
        depends_on:
        - H
      J:
        depends_on:
        - I
      K:
        depends_on:
        - J
  dag-pipeline:
    workflows:
      primary_12: {}
      primary_11:
        depends_on:
        - primary_12
      primary_10:
        depends_on:
        - primary_12
      primary_9:
        depends_on:
        - primary_12
      primary_8:
        depends_on:
        - primary_12
      primary_7:
        depends_on:
        - primary_11
        - primary_10
        - primary_9
        - primary_8
      primary: {}
      primary_1: {}
      primary_2:
        depends_on:
        - primary
        - primary_1
      primary_3:
        depends_on:
        - primary_2
      primary_4:
        depends_on:
        - primary_2
      primary_5:
        depends_on:
        - primary_3
        - primary_1
  dag-single-pipeline:
    workflows:
      primary: {}
  dag-train-pipeline:
    workflows:
      primary: {}
      primary_1:
        depends_on:
        - primary
      primary_2:
        depends_on:
        - primary_1
      primary_3:
        depends_on:
        - primary_2
  dag-train-pipeline-with-always-run:
    workflows:
      primary: {}
      primary_1:
        depends_on:
        - primary
      failing_workflow:
        depends_on:
        - primary_1
      primary_3:
        depends_on:
        - failing_workflow
      primary_2:
        depends_on:
        - primary_3
      primary_4:
        depends_on:
        - failing_workflow
      primary_5:
        depends_on:
        - primary_4
        should_always_run: workflow
      static_analyses:
        depends_on:
        - primary_5
workflows:
  1111failing_workflow:
    steps:
    - script@1:
        inputs:
        - script_file_path:
        - content: "sleep 30      \necho \"Done waiting!\"\n exit 1"
    triggers:
      enabled: false
    summary: abc
    envs:
    - opts:
        is_expand: false
      B: B
    - opts:
        is_expand: false
      A: ''
    - EGYE: FOO
      opts:
        is_expand: false
  static_analyses:
    steps:
    - script@1:
        inputs:
        - script_file_path:
        - content: "sleep 30      \necho \"Done waiting!\"\n exit 1"
  build_ios:
    steps:
    - script@1:
        inputs:
        - script_file_path:
        - content: "sleep 30      \necho \"Done waiting!\""
  build_android:
    steps:
    - script@1:
        inputs:
        - script_file_path:
        - content: "sleep 90      \necho \"Done waiting!\""
  test_android:
    steps:
    - script@1:
        inputs:
        - script_file_path:
        - content: "sleep 30      \necho \"Done waiting!\""
  test_ios:
    steps:
    - script@1:
        inputs:
        - script_file_path:
        - content: "sleep 90      \necho \"Done waiting!\""
  _create_artifact:
    steps:
    - git-clone@6.2: {}
    - script@1:
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            echo $BITRISE_TRIGGERED_WORKFLOW_ID-$BITRISE_TRIGGERED_WORKFLOW_TITLE > $BITRISE_DEPLOY_DIR/$BITRISE_TRIGGERED_WORKFLOW_ID.txt
        - script_file_path: "$a"
        run_if: 'true'
    - deploy-to-bitrise-io@2:
        inputs:
        - is_compress: 'true'
    triggers:
      push:
      - branch: "*"
  _util:
    steps:
    - script@1:
        inputs:
        - script_file_path:
        - content: "#!/bin/bash\nMAXWAIT=30\necho \"Waiting\"\nsleep $((RANDOM % MAXWAIT))
            \     \necho \"Done waiting!\""
        run_if: 'false'
  A:
    before_run:
    - _create_artifact
    - _util
    meta:
      bitrise.io:
        stack: osx-xcode-15.4.x
  B:
    before_run:
    - _create_artifact
    - _util
  C:
    before_run:
    - _create_artifact
    - _util
    steps:
    - script@1:
        inputs:
        - script_file_path:
        - content: exit 1
        run_if: 'false'
  D:
    before_run:
    - _create_artifact
    - _util
    steps:
    - script@1:
        inputs:
        - script_file_path:
        - content: " exit 0"
  E:
    before_run:
    - _create_artifact
    - _util
  F:
    before_run:
    - _create_artifact
    - _util
  G:
    before_run:
    - _create_artifact
    - _util
  H:
    before_run:
    - _create_artifact
    - _util
  I:
    before_run:
    - _create_artifact
    - _util
    steps:
    - script@1:
        inputs:
        - script_file_path:
        - content: 'exit 1 '
        run_if: 'false'
  J:
    before_run:
    - _create_artifact
    - _util
  K:
    before_run:
    - _create_artifact
    - _util
  Pipeline-generator:
    before_run:
    - _create_artifact
    - _util
  primary:
    before_run:
    - _create_artifact
    - _util
    meta:
      bitrise.io:
        stack: osx-xcode-edge
  primary_1:
    before_run:
    - _create_artifact
    - _util
  primary_10:
    before_run:
    - _util
  primary_11:
    before_run:
    - _util
  primary_12:
    before_run:
    - _util
  primary_2:
    before_run:
    - _util
  primary_3:
    before_run:
    - _util
  primary_4:
    before_run:
    - _util
  primary_5:
    before_run:
    - _util
  primary_6:
    before_run:
    - _util
  primary_7:
    before_run:
    - _util
  primary_8:
    before_run:
    - _util
  primary_9:
    before_run:
    - _util
  test_extended_permission:
    steps:
    - git-clone@8.2.2: {}
    - git-tag@1.1.0: {}
  testing-certificates:
    steps:
    - certificate-and-profile-installer@1.11.4: {}
meta:
  bitrise.io:
    stack: osx-xcode-edge
    machine_type_id: g2-m1.4core
trigger_map:
- pull_request_label: "*"
  type: pull_request
  pipeline: with-stages
- push_branch: "*"
  type: push
  pipeline: with-stages
- pull_request_source_branch: "*"
  type: pull_request
  pipeline: dag-fan-out-fan-in
